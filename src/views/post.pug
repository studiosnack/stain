doctype html

head
  title= postTitle ? `${user.username}: ${postTitle}` : 'fotos'
  meta(charset="utf-8")
  meta(name="viewport" content="width=device-width, initial-scale=1")

  meta(property="description"  content=postTitle)
  meta(property="og:description"  content=post.title)
  
  if canonicalUrl
    link(href=canonicalUrl rel="alternate" type="application/activity+json")

  each im, idx in media
    meta(property="og:image"  content=`${origin}/m/m/${im.media_id}`)
    meta(property="og:image:type"  content="image/jpeg")
    meta(property="og:image:width"  content=allMeta[idx].og.width)
    meta(property="og:image:height"  content=allMeta[idx].og.height)

  link(rel="stylesheet" href="/styles.css")

body

  .container
    .fotoBox
      each im, idx in media
        - var width = allMeta[idx].sharp_metadata.width
        - var height = allMeta[idx].sharp_metadata.height
        - var maxIntrinsicWidth = Math.min(400, width)
        - var maxIntrinsicHeight = Math.floor((height / width) * maxIntrinsicWidth)
        figure.foto(data-idx=idx data-media-id=im.media_id id=im.media_id)
          img(
            src=`/m/s/${im.media_id}` 
            srcset=`/m/s/${im.media_id} 500w, /m/m/${im.media_id} 1080w, /m/l/${im.media_id} 2000w, /m/xl/${im.media_id} ${allMeta[idx].sharp_metadata.width}w`
            width=maxIntrinsicWidth
            height=maxIntrinsicHeight
            loading="lazy" 
            style=`max-width: ${width}px;`
          )
          figcaption= im.media_caption || im.media_title || im.post_title
    .fotoCaption
      div.spacer
      div.description
        p= media[0].post_title || media[0].media_title
      div.meta
        a(href=`/${user.username}`)= user.username
        span(style="margin: 0 .25em;")| @
        span.date
          = new Intl.DateTimeFormat('en-us').format(new Date(media[0].post_created_on*1000))
          if (userOwnsMedia)
            a(href=`/p/${post.id}/meta` title="edit this post" style="margin-left: .25em")| 📝
        if media.length > 1 
          span.scrollPosition= `${1} of ${media.length}`
        a.link(href="javascript:" title="copy a link to this photo")|  🔗
        a.share(href="javascript:" title="share this photo")| 📤
        if (userOwnsMedia) 
          a.dl_link(href=`${origin}/m/o/${media[0].media_id}` title="download this photo")|  💾
        

  if (userOwnsMedia) 
    details
      pre.meta #{JSON.stringify(media,null,2)}
      pre.meta #{JSON.stringify(allMeta, null, 2)}

  script.
  
    //- bootstrap intersection observer if needed
    if (document.querySelectorAll(".foto").length > 1) {
      const observerCallback = (entries, observer) => {
        const visibleEntry = entries.filter(ent => ent.isIntersecting)[0]?.target;
        const index = Number(visibleEntry?.dataset?.idx ?? 1)
        document.querySelector('.scrollPosition').innerText = `${index+1} of #{media.length}`
        if (visibleEntry) {
          const mediaId = visibleEntry.dataset?.mediaId;
          if (mediaId) {
            window.location.replace(`#${mediaId}`)
              
            document.querySelector('.dl_link')?.setAttribute('href', `/m/o/${mediaId}`)
          }
        }
      };

      let observer = new IntersectionObserver(observerCallback, {
        root: document.getElementsByClassName(".fotoBox")[0], 
        rootMargin:"5px",
        threshold: 0.80
      });
      
      document.querySelectorAll(".foto").forEach(el => observer.observe(el))
    }
    
    if (window.location.hash !== '') {
      const hashMediaId = window.location.hash.replace('#','');
      document.getElementById(`${hashMediaId}`).scrollIntoView();
    }
        
    document.querySelector('.link').addEventListener('click', () => {
      navigator.clipboard.writeText(window.location.href).then(() => {
        document.querySelector('.link').innerText = '✅'
      }).catch(err => {console.log(err)})
    })
    
    document.querySelector('.share').addEventListener('click', () => {
      const pageTitle = document.querySelector('.description')?.innerText?.trim() ?? ""
      const shareData = {
        title: pageTitle !== '' ? `${pageTitle} // #{user.username}` : `nsfmc // snaps`,
        text: document.querySelector('.description')?.innerText?.trim(),
        url: window.location.href,
      };
      console.log(shareData)
      navigator.share(shareData).then(res => {
        console.log(res)
      }).catch(err => {
        console.error(err)
      })
    })
    
    document.querySelectorAll('.foto').forEach(el => el.addEventListener('click', (evt) => {
      evt.currentTarget.requestFullscreen().catch(err => {console.error(err); console.log('oops')})
    }));
    